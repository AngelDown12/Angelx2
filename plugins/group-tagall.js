const wm = '';

// Mapa de indicativos a banderas
const paises = {
  '1': 'üá∫üá∏', // EE.UU. y Canad√°
  '52': 'üá≤üáΩ',
  '54': 'üá¶üá∑',
  '55': 'üáßüá∑',
  '57': 'üá®üá¥',
  '58': 'üáªüá™',
  '51': 'üáµüá™',
  '56': 'üá®üá±',
  '591': 'üáßüá¥',
  '593': 'üá™üá®',
  '502': 'üá¨üáπ',
  '503': 'üá∏üáª',
  '504': 'üá≠üá≥',
  '505': 'üá≥üáÆ',
  '506': 'üá®üá∑',
  '507': 'üáµüá¶',
  '53': 'üá®üá∫',
  '34': 'üá™üá∏',
  '91': 'üáÆüá≥',
  '62': 'üáÆüá©',
  '92': 'üáµüá∞'
};

const handler = async (m, { conn, participants, isAdmin, isOwner }) => {
  if (!(isAdmin || isOwner)) {
    global.dfail('admin', m, conn);
    return;
  }

  const texto = m.text?.trim() || '';
  const mensaje = texto.replace(/^(\.|)(tagall|invocar|invocacion|invocaci√≥n|todos|talibanes)/i, '').trim();
  const miembros = participants.length;

  let textoFinal = `*!  MENCION GENERAL  !*\n  *PARA ${miembros} MIEMBROS* üó£Ô∏è\n\n*¬ª INFO :* ${mensaje || 'Sin mensaje.'}\n\n‚ï≠  ‚îÑ ùÖÑ  €™Íí∞ \`‚°û·™≤=ÕüÕüÕûùêÄùêßùê†ùêûùê• ùêÅùê®ùê≠ ‚âº·≥û◊Ñ\` Íí±  €ü  ùÖÑ ‚îÑ\n`;

  for (const user of participants) {
    const id = user.id.split('@')[0];
    const indicativo = Object.keys(paises).find(code => id.startsWith(code)) || '';
    const bandera = paises[indicativo] || 'üåç'; // üåç para pa√≠ses no mapeados
    textoFinal += `${bandera} @${id}\n`;
  }

  await conn.sendMessage(m.chat, {
    text: textoFinal,
    mentions: participants.map(p => p.id)
  });
};

handler.customPrefix = /^(\.|)(tagall|invocar|invocacion|invocaci√≥n|todos|talibanes)/i;
handler.command = new RegExp();
handler.group = true;
handler.admin = true;

export default handler;